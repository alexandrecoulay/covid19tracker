{"version":3,"sources":["Pages/Covid.jsx","Pages/App.jsx","index.js"],"names":["CovidHome","useState","data","setData","useEffect","a","fetch","request","json","response","new_map","timeline","forEach","result","todayHospitalStart","todayReanimationStart","todayCases","cas","hospitalisation","Infinity","isNaN","reanimation","gueris","todayRecovered","mort","todayDeathsHospital","date","push","getData","className","ResponsiveContainer","width","height","BarChart","Bar","stackId","dataKey","fill","XAxis","interval","tickFormatter","str","dayjs","get","console","log","locale","fr","format","axisLine","tickLine","YAxis","Tooltip","Legend","verticalAlign","App","exact","path","component","rootElement","document","getElementById","ReactDOM","render"],"mappings":"gTAmEeA,MA9Df,WAAsB,IAAD,EAEOC,mBAAS,IAFhB,mBAEVC,EAFU,KAEJC,EAFI,KAkCjB,OA9BAC,qBAAU,WAAM,4CACZ,gCAAAC,EAAA,sEAC0BC,MAAM,oDADhC,cACUC,EADV,gBAE2BA,EAAQC,OAFnC,OAEUC,EAFV,OAIQC,EAAU,GAEdD,EAASE,SAASC,SAAQ,SAACV,GACvB,IAAIW,GAAUX,EAAKY,mBAAmBZ,EAAKa,uBAAuBb,EAAKc,WAIjER,EAAO,CACTS,IAAK,IACLC,gBAJJL,EAASA,IAAWM,KAAYC,MAAMP,GAAU,KAAOA,EAKnDQ,YAAcnB,EAAKa,sBAAsBb,EAAKc,WAAY,IAC1DM,OAASpB,EAAKqB,eAAerB,EAAKc,WAAY,IAC9CQ,KAAOtB,EAAKuB,oBAAoBvB,EAAKc,aAAgBG,KAAYC,MAAOlB,EAAKuB,oBAAoBvB,EAAKc,YAAe,KAAQd,EAAKuB,oBAAoBvB,EAAKc,WAC3JU,KAAMxB,EAAKwB,MAGf,OAAOlB,EAAKU,iBAAmBV,EAAKgB,MAAQd,EAAQiB,KAAKnB,MAG7DL,EAAQO,GAvBZ,4CADY,uBAAC,WAAD,wBA2BZkB,KACD,IAGC,qBAAKC,UAAU,gBAAf,SACI,qBAAKA,UAAU,OAAf,SACI,sBAAKA,UAAU,aAAf,UACI,8CACA,cAACC,EAAA,EAAD,CAAqBC,MAAM,OAAOC,OAAO,OAAzC,SACI,eAACC,EAAA,EAAD,CAAU/B,KAAMA,EAAhB,UACI,cAACgC,EAAA,EAAD,CAAKC,QAAQ,IAAIC,QAAQ,OAAOC,KAAK,YACrC,cAACH,EAAA,EAAD,CAAKC,QAAQ,IAAIC,QAAQ,kBAAkBC,KAAK,YAChD,cAACC,EAAA,EAAD,CAAOF,QAAQ,OAAOG,SAAS,mBAAmBC,cAAe,SAAAC,GAC7D,IAAMf,EAAOgB,IAAMD,GAAKE,IAAI,SAE5B,OADAC,QAAQC,IAAInB,GACTA,EAAO,IAAM,EACLgB,IAAMD,GAAKK,OAAOC,KAAIC,OAAO,WAEjC,IACRC,UAAU,EAAOC,SAAU,KAC9B,cAACC,EAAA,EAAD,CAAOZ,SAAS,qBAChB,cAACa,EAAA,EAAD,IACA,cAACC,EAAA,EAAD,CAAQC,cAAc,qB,OCzCnCC,MAZf,WACI,OACI,qBAAK1B,UAAU,aAAf,SACI,eAAC,IAAD,WACI,cAAC,IAAD,IACI,cAAC,IAAD,CAAO2B,OAAK,EAACC,KAAK,IAAIC,UAAW1D,IACrC,cAAC,IAAD,UCNV2D,EAAcC,SAASC,eAAe,QAC5CC,IAASC,OAAO,cAAC,EAAD,IAASJ,K","file":"static/js/main.7b042ab1.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport fr from \"dayjs/locale/fr\"\r\nimport { Legend, Tooltip, YAxis, XAxis, BarChart, Bar, ResponsiveContainer } from \"recharts\";\r\nimport dayjs from \"dayjs\";\r\n\r\nfunction CovidHome() {\r\n\r\n    const [data, setData] = useState([]);\r\n\r\n    useEffect(() => {\r\n        async function getData() {\r\n            const request = await fetch(\"https://cascoronavirus.com/france-datas-national\");\r\n            const response = await request.json();\r\n\r\n            var new_map = [];\r\n\r\n            response.timeline.forEach((data) => {\r\n                var result = (data.todayHospitalStart+data.todayReanimationStart)/data.todayCases;\r\n\r\n                result = result === Infinity || isNaN(result) ? null : result;\r\n\r\n                const json = {\r\n                    cas: 100,\r\n                    hospitalisation: result,\r\n                    reanimation: (data.todayReanimationStart/data.todayCases)*100,\r\n                    gueris: (data.todayRecovered/data.todayCases)*100,\r\n                    mort: (data.todayDeathsHospital/data.todayCases) === Infinity || isNaN((data.todayDeathsHospital/data.todayCases)) ? null : (data.todayDeathsHospital/data.todayCases),\r\n                    date: data.date\r\n                }\r\n\r\n                return json.hospitalisation && json.mort && new_map.push(json);\r\n            })\r\n\r\n            setData(new_map)\r\n        }\r\n\r\n        getData()\r\n    }, [])\r\n\r\n    return (\r\n        <div className=\"globalsection\">\r\n            <div className=\"main\">\r\n                <div className=\"main-chart\">\r\n                    <h2>Pour 100 cas</h2>\r\n                    <ResponsiveContainer width=\"100%\" height=\"100%\">\r\n                        <BarChart data={data}>\r\n                            <Bar stackId=\"a\" dataKey=\"mort\" fill=\"#C04725\" />\r\n                            <Bar stackId=\"a\" dataKey=\"hospitalisation\" fill=\"#4D4DD5\" />\r\n                            <XAxis dataKey=\"date\" interval=\"preserveStartEnd\" tickFormatter={str => {\r\n                                const date = dayjs(str).get('month');\r\n                                console.log(date);\r\n                                if(date % 4 === 1){\r\n                                    return dayjs(str).locale(fr).format(\"MMM, DD\")\r\n                                }\r\n                                return \"\"\r\n                            }} axisLine={false} tickLine={10} />\r\n                            <YAxis interval=\"preserveStartEnd\" />\r\n                            <Tooltip />\r\n                            <Legend verticalAlign=\"top\" />\r\n                        </BarChart>\r\n                    </ResponsiveContainer>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CovidHome;","import React from \"react\";\r\nimport { Route, Switch, BrowserRouter } from \"react-router-dom\";\r\nimport CovidHome from \"./Covid\";\r\nimport \"../Styles/styles.css\";\r\n\r\nfunction App() {\r\n    return (\r\n        <div className=\"theme-main\">\r\n            <BrowserRouter>\r\n                <Switch />\r\n                    <Route exact path=\"/\" component={CovidHome} />\r\n                <Switch />\r\n            </BrowserRouter>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./Pages/App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<App />, rootElement);"],"sourceRoot":""}